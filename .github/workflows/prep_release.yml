# ------------------------------------------------------------------------------
# NOTES
#
# It would be nice if we could use an expression to set the default value of
# `github.event.inputs.branch` to the the repository's current default branch,
#  so the defaults always work, regardless of the whether it's `master`,
# `main`, or `fred`.
#
# Unfortunately, an expression like `${{ github.repository.default_branch }}`
# doesn't evaluate within `workflow_dispatch.inputs.*.default`, and the
# [`$default-branch` macro][1] only works in workflow **templates**.
#
# FIXME: When we implement [default branch renaming][2], this MUST be changed.
#
# [1]: https://github.blog/changelog/2020-07-22-github-actions-better-support-for-alternative-default-branch-names/
# [2]: https://github.com/github/renaming/
# ------------------------------------------------------------------------------
---
name: 'Prepare assets for release'
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Git branch to release'
        required: true
        default: 'master'  # FIXME: ensure this is the correct branch (See NOTES)
      generate_docs:
        description: 'Generate documentation'
        required: true
        default: 'true'
      auto_tag:
        description: 'Automatically tag release'
        required: true
        default: 'noop' # FIXME: in productino , change to true
###      build_artifacts:
###        description: 'Build artifact'
###        required: true
###        default: true
###      auto_bump_version:
###        description: 'Automatically bump unresolved assets to the latest version'
###        required: true
###        default: true

env:
  PUPPET_VERSION: "~> 6"

jobs:
  generate-docs:
    name: "Generate REFERENCE.md"
    if: github.event.inputs.generate_docs == 'true'
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch}}
          clean: true
      - name: "Install Ruby ${{matrix.puppet.ruby_version}}"
        uses: ruby/setup-ruby@v1  # ruby/setup-ruby@ec106b438a1ff6ff109590de34ddc62c540232e0
        with:
          ruby-version: 2.5
          bundler-cache: true
      - run: 'bundle exec rake strings:generate:reference'
      - id: git_diff
        run: |
          git diff --exit-code -- REFERENCE.md
          echo "::set-output name=exit-code::${?}"
          echo "::group::Commit and push REFERENCE.md (if changed)"
      - name: 'Set up git user & remote'
        if: steps.git_diff.outputs.exit-code != '0'
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git remote add github "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@${GITHUB_SERVER_URL#*://}/${GITHUB_REPOSITORY}.git"
      - name: 'Commit REFERENCE.md'
        if: steps.git_diff.outputs.exit-code != '0'
        run: |
          git add REFERENCE.md
          git commit -m "(RELENG) Generate REFERENCE.md"
      - name: 'Push commit back to ${{ github.event.inputs.branch }}'
        if: steps.git_diff.outputs.exit-code != '0'
        run: "git push -u github ${{ github.event.inputs.branch }}"
      - name: 'echo things'
        run: |
          echo "::endgroup::"
          echo "== steps.git_diff.outputs.exit-code: '${{steps.git_diff.outputs.exit-code}}'"

  auto-tag:
    name: "Auto-Tag release"
    if: github.event.inputs.auto_tag == 'true' || github.event.inputs.auto_tag == 'noop'
    needs: [ generate-docs ]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch}}
          clean: true
      - name: 'Set up git user & remote'
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git remote add github "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@${GITHUB_SERVER_URL#*://}/${GITHUB_REPOSITORY}.git"
      - name: "Install Ruby ${{matrix.puppet.ruby_version}}"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.5
          bundler-cache: true
      - name: 'Tag release (if needed)'
        id: tag-release
        run: |
          git fetch --tags
          if bundle exec rake pkg:compare_latest_tag | grep 'New tag.* is required'; then
             tag="$(bundle exec rake pkg:compare_latest_tag | grep 'New tag.* is required' | sed -e 's/^.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*$/\1/')"
             changelog_file="$(mktemp)"
             echo "::set-output name=tag-name::${tag}"
             echo "=== TAGGING '$tag'"
             bundle exec rake pkg:create_tag_changelog > "$changelog_file"
             git tag "$tag" -a -F "$changelog_file"
             git tag -l -n6
          else
             echo "=== No need for tag (wait, WHY)!"
             echo "::set-output name=tag-name::"
          fi
      - name: 'Push tag ${{steps.tag-release.outputs.tag-name}} to ${{ github.event.inputs.branch }}'
        if: contains(steps.tag-release.outputs.tag-name,'.')  && github.event.inputs.auto_tag != 'noop'
        run: "git push -u github ${{ steps.tag-release.outputs.tag-name }}"
      - name: 'echo things'
        run: |
          echo "== steps.tag-release.outputs.tag-name: '${{steps.tag-release.outputs.tag-name}}'"
          echo "== github.event.inputs.auto_tag: '${{github.event.inputs.auto_tag}}'"
          echo "== github.event.inputs.auto_tag: '${{github.event.inputs.auto_tag}}'"

  files:
    name: "File checks"
    if: always()
    needs: [ generate-docs, auto-tag ]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch}}
          clean: true
      - name: "Install Ruby ${{matrix.puppet.ruby_version}}"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.5
          bundler-cache: true
      - run: bundle exec rake check:dot_underscore
      - run: bundle exec rake check:test_file


  releng-checks:
    name: "RELENG checks"
    if: always()
    needs: [ generate-docs, auto-tag  ]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch}}
          clean: true
      - name: "Install Ruby ${{matrix.puppet.ruby_version}}"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.5
          bundler-cache: true

      - name: "Tags and changelogs"
        run: |
          bundle exec rake pkg:check_version
          bundle exec rake pkg:compare_latest_tag
          bundle exec rake pkg:create_tag_changelog

      - name: "Build Puppet module"
        run: "bundle exec pdk build --force"
